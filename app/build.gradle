import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: 'com.android.application'

android {
	compileSdkVersion 23
	buildToolsVersion "23.0.3"

	defaultConfig {
		applicationId "droidsonroids.pl.aopdemo"
		minSdkVersion 19
		targetSdkVersion 23
		versionCode 1
		versionName "1.0"
	}
}

dependencies {
	testCompile 'junit:junit:4.12'
	debugCompile 'org.aspectj:aspectjrt:1.8.9'
	compile 'com.android.support:appcompat-v7:23.3.0'
}

android.applicationVariants.all { variant ->
	if (!variant.buildType.isDebuggable()) {
		return
	}
	JavaCompile javaCompile = variant.javaCompile
	javaCompile.doLast {
		String[] args = ["-showWeaveInfo",
		                 "-1.5",
		                 "-inpath", javaCompile.destinationDir.toString(),
		                 "-aspectpath", javaCompile.classpath.asPath,
		                 "-d", javaCompile.destinationDir.toString(),
		                 "-classpath", javaCompile.classpath.asPath,
		                 "-bootclasspath", android.bootClasspath.join(File.pathSeparator)
		]

		MessageHandler handler = new MessageHandler(true);
		new Main().run(args, handler)

		def log = project.logger
		for (IMessage message : handler.getMessages(null, true)) {
			switch (message.getKind()) {
				case IMessage.ABORT:
				case IMessage.ERROR:
				case IMessage.FAIL:
					log.error message.message, message.thrown
					break;
				case IMessage.WARNING:
				case IMessage.INFO:
					log.info message.message, message.thrown
					break;
				case IMessage.DEBUG:
					log.debug message.message, message.thrown
					break;
			}
		}
	}
}
